{"hash":"bb0abdda8c526683f0f50b70860763897e409915","fesm2020":{"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, NgModule } from '@angular/core';\nimport * as i1$1 from '@angular/common/http';\nimport { HttpHeaders, HttpClientModule } from '@angular/common/http';\nimport { ReplaySubject, Observable } from 'rxjs';\nimport { UserManager } from 'oidc-client';\nimport * as i2 from '@angular/common';\nimport { HashLocationStrategy } from '@angular/common';\nimport * as i1 from '@angular/router';\nimport { RouterModule } from '@angular/router';\n\nclass SimApiConfigService {\n    constructor() {\n        this.debug = true;\n        this.oidc = {\n            server: '',\n            client_id: '',\n            scope: '',\n            response_type: 'token id_token',\n            sign_in_uri: '/oidc/sign-in',\n            sign_out_uri: '/oidc/sign-out',\n            sign_out_sync: false,\n            use_popup: false,\n            popup_setting: 'location=no,toolbar=no,width=1000,height=600,left=100,top=100',\n            full: null // 全量配置，使用oidc-client的配置方式，这种方式忽略其他参数\n        };\n        this.auth = {\n            token_name: 'simapi-auth-token',\n            check_url: '/auth/check',\n            logout_url: '/auth/logout',\n            login_url: '/auth/login'\n        };\n        this.api = {\n            endpoints: {\n                default: ''\n            },\n            defaultEndpoint: 'default',\n            businessCallback: {\n                401: (data) => {\n                    localStorage.removeItem('token');\n                },\n                common: (data) => {\n                }\n            },\n            responseCallback: {\n                success(response) {\n                    return response;\n                },\n                error(response) {\n                }\n            }\n        };\n        this.realTime$ = new ReplaySubject(1);\n        this.realTime$.next(this);\n    }\n}\nSimApiConfigService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SimApiConfigService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nSimApiConfigService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SimApiConfigService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SimApiConfigService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass SimApiOidcService {\n    constructor(route, ls, config, router) {\n        this.route = route;\n        this.ls = ls;\n        this.config = config;\n        this.router = router;\n        this.oidcSetting = {\n            authority: '',\n            client_id: '',\n            redirect_uri: '',\n            scope: '',\n            response_type: '',\n            automaticSilentRenew: false,\n            popupWindowFeatures: 'location=no,toolbar=no,width=800,height=600,left=100,top=100',\n            post_logout_redirect_uri: '',\n            popup_post_logout_redirect_uri: ''\n        };\n        this.currentUser = null;\n        this.userLoaded$ = new ReplaySubject(1);\n        this.signState$ = new ReplaySubject(1);\n        config.realTime$.subscribe(x => {\n            if (this.config.oidc.full !== null) {\n                this.oidcSetting = x.oidc.full;\n            }\n            else {\n                this.oidcSetting.response_type = x.oidc.response_type;\n                if (ls instanceof HashLocationStrategy) {\n                    this.oidcSetting.redirect_uri = `${document.location.origin}/#${x.oidc.sign_in_uri}?`;\n                    this.oidcSetting.post_logout_redirect_uri = `${document.location.origin}/#${x.oidc.sign_out_uri}`;\n                    this.oidcSetting.popup_post_logout_redirect_uri = `${document.location.origin}/#${x.oidc.sign_out_uri}`;\n                }\n                else {\n                    this.oidcSetting.redirect_uri = `${document.location.origin}${x.oidc.sign_in_uri}`;\n                    this.oidcSetting.post_logout_redirect_uri = `${document.location.origin}${x.oidc.sign_out_uri}`;\n                    this.oidcSetting.popup_post_logout_redirect_uri = `${document.location.origin}${x.oidc.sign_out_uri}`;\n                }\n                this.usePopup = x.oidc.use_popup;\n                this.oidcSetting.popupWindowFeatures = x.oidc.popup_setting;\n                this.oidcSetting.authority = x.oidc.server;\n                this.oidcSetting.client_id = x.oidc.client_id;\n                this.oidcSetting.scope = x.oidc.scope;\n            }\n            this.manager = new UserManager(this.oidcSetting);\n            this.manager.clearStaleState();\n            this.manager.getUser().then(user => {\n                if (user) {\n                    this.currentUser = user;\n                    this.userLoaded$.next(true);\n                }\n                else {\n                    this.currentUser = null;\n                    this.userLoaded$.next(false);\n                }\n            }).catch(err => {\n                this.currentUser = null;\n                this.userLoaded$.next(false);\n            });\n            this.manager.events.addUserLoaded(user => {\n                this.currentUser = user;\n                this.userLoaded$.next(true);\n            });\n            this.manager.events.addUserUnloaded(() => {\n                this.currentUser = null;\n                this.userLoaded$.next(false);\n            });\n        });\n    }\n    signIn() {\n        if (this.usePopup) {\n            this.manager.signinPopup();\n        }\n        else {\n            this.manager.signinRedirect();\n        }\n    }\n    signInCallback() {\n        const url = window.location.href.replace('/#/', '').replace('?', '#');\n        this.manager.signinCallback(url).then(() => {\n            this.signState$.next(true);\n        });\n    }\n    signOut() {\n        if (this.config.oidc.sign_out_sync) {\n            if (this.usePopup) {\n                this.manager.signoutPopup();\n            }\n            else {\n                this.manager.signoutRedirect();\n            }\n        }\n        else {\n            this.manager.removeUser().then(() => {\n                this.userLoaded$.next(false);\n                this.signState$.next(false);\n            });\n        }\n    }\n    signOutCallBack() {\n        this.manager.signinCallback().then(() => {\n            this.signState$.next(false);\n        });\n        this.signState$.next(false);\n    }\n    get userAvailable() {\n        return !!this.currentUser;\n    }\n    get user() {\n        return this.currentUser;\n    }\n}\nSimApiOidcService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SimApiOidcService, deps: [{ token: i1.ActivatedRoute }, { token: i2.LocationStrategy }, { token: SimApiConfigService }, { token: i1.Router }], target: i0.ɵɵFactoryTarget.Injectable });\nSimApiOidcService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SimApiOidcService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SimApiOidcService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.ActivatedRoute }, { type: i2.LocationStrategy }, { type: SimApiConfigService }, { type: i1.Router }]; } });\n\nclass SimApiService {\n    constructor(http, oidc, config) {\n        this.http = http;\n        this.oidc = oidc;\n        this.config = config;\n        this.headers = {};\n        config.realTime$.subscribe(x => {\n            this.endpoints = x.api.endpoints;\n            this.debugMode = x.debug;\n            this.businessCallback = x.api.businessCallback;\n            this.responseCallback = x.api.responseCallback;\n        });\n    }\n    // 判断是否DEBUG模式\n    get isDebug() {\n        return this.debugMode;\n    }\n    // 输出DEBUG信息（非DEBUG模式无输出）\n    debug(title, data) {\n        if (this.isDebug) {\n            window.console.log('[DEBUG]', title, data);\n        }\n    }\n    // 生成一个随机短字符串\n    genS4() {\n        // @ts-ignore\n        // tslint:disable-next-line:no-bitwise\n        return (((1 + Math.random()) * 0x10000 * Date.parse(new Date())) | 0).toString(16).substring(1);\n    }\n    getEndpoint(name = this.config.api.defaultEndpoint) {\n        return this.endpoints[name];\n    }\n    // 发起数据请求\n    query(uri, params = {}, endpointKey = this.config.api.defaultEndpoint, headers = null) {\n        if (headers === null) {\n            headers = this.headers;\n        }\n        const queryId = this.genS4();\n        if (!(params instanceof FormData)) {\n            headers['Content-Type'] = 'application/json';\n        }\n        if (localStorage.getItem(this.config.auth.token_name)) {\n            headers.Token = localStorage.getItem(this.config.auth.token_name);\n        }\n        if (this.oidc.userAvailable) {\n            headers.Authorization = `${this.oidc.user?.token_type} ${this.oidc.user?.access_token}`;\n        }\n        if (this.isDebug) {\n            headers['Query-Id'] = queryId;\n            console.log('[REQUEST*]', queryId, '->', uri, 'AUTH:', localStorage.getItem(this.config.auth.token_name) || this.oidc.userAvailable, params);\n        }\n        const resp = this.http.post(this.endpoints[endpointKey] + uri, params, {\n            headers: new HttpHeaders(headers)\n        });\n        return new Observable(obs => {\n            resp.subscribe(data => {\n                if (this.isDebug) {\n                    console.log('[RESPONSE]', queryId, '->', data);\n                }\n                const respData = this.responseCallback.success(data);\n                if (this.businessCallback.hasOwnProperty(respData.code)) {\n                    this.businessCallback[respData.code](respData);\n                }\n                else if (this.businessCallback.common && respData.code !== 200) {\n                    this.businessCallback.common(respData);\n                }\n                if (respData.code === 200) {\n                    obs.next(respData);\n                }\n                else {\n                    obs.error(respData);\n                }\n            }, err => {\n                if (this.isDebug) {\n                    console.log('[RESPONSE]', queryId, '->', err);\n                }\n                this.responseCallback.error(err);\n            });\n        });\n    }\n}\nSimApiService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SimApiService, deps: [{ token: i1$1.HttpClient }, { token: SimApiOidcService }, { token: SimApiConfigService }], target: i0.ɵɵFactoryTarget.Injectable });\nSimApiService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SimApiService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SimApiService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1$1.HttpClient }, { type: SimApiOidcService }, { type: SimApiConfigService }]; } });\n\nclass SimApiAuthService {\n    constructor(simapi, config) {\n        this.simapi = simapi;\n        this.config = config;\n    }\n    // 登录\n    login(request) {\n        return new Observable(obs => {\n            this.simapi.query(this.config.auth.login_url, request).subscribe(x => {\n                if (x.data) {\n                    this.setToken(x.data);\n                }\n                obs.next(x);\n            }, e => obs.error(e));\n        });\n    }\n    // 设置登陆Token\n    setToken(token) {\n        localStorage.setItem(this.config.auth.token_name, token);\n    }\n    // 登出\n    logout(url = this.config.auth.logout_url) {\n        return new Observable(obs => {\n            localStorage.removeItem(this.config.auth.token_name);\n            if (url !== null) {\n                this.simapi.query(url).subscribe(r => obs.next(r), e => obs.error(e));\n            }\n            else {\n                obs.next(true);\n            }\n        });\n    }\n    // 检测登陆状态（需要借助401返回判断）\n    checkLogin(url = this.config.auth.check_url) {\n        if (url !== null) {\n            this.simapi.query(url).subscribe();\n        }\n        else {\n            if (this.getToken() !== '') {\n                this.config.api.businessCallback[401](null);\n            }\n        }\n    }\n    // 获取用户登陆标识\n    getToken() {\n        return localStorage.getItem(this.config.auth.token_name) || '';\n    }\n}\nSimApiAuthService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SimApiAuthService, deps: [{ token: SimApiService }, { token: SimApiConfigService }], target: i0.ɵɵFactoryTarget.Injectable });\nSimApiAuthService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SimApiAuthService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SimApiAuthService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: SimApiService }, { type: SimApiConfigService }]; } });\n\nclass SignInComponent {\n    constructor(oidc) {\n        this.oidc = oidc;\n    }\n    ngOnInit() {\n        this.oidc.signInCallback();\n    }\n}\nSignInComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SignInComponent, deps: [{ token: SimApiOidcService }], target: i0.ɵɵFactoryTarget.Component });\nSignInComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.4\", type: SignInComponent, selector: \"simapi-sign-in\", ngImport: i0, template: '', isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SignInComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'simapi-sign-in',\n                    template: '',\n                }]\n        }], ctorParameters: function () { return [{ type: SimApiOidcService }]; } });\n\nclass SignOutComponent {\n    constructor(oidc) {\n        this.oidc = oidc;\n    }\n    ngOnInit() {\n        this.oidc.signOutCallBack();\n    }\n}\nSignOutComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SignOutComponent, deps: [{ token: SimApiOidcService }], target: i0.ɵɵFactoryTarget.Component });\nSignOutComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.4\", type: SignOutComponent, selector: \"simapi-sign-out\", ngImport: i0, template: '', isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SignOutComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'simapi-sign-out',\n                    template: '',\n                }]\n        }], ctorParameters: function () { return [{ type: SimApiOidcService }]; } });\n\nclass SignInRedirectComponent {\n    constructor(oidc) {\n        this.oidc = oidc;\n    }\n    ngOnInit() {\n        this.oidc.signIn();\n    }\n}\nSignInRedirectComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SignInRedirectComponent, deps: [{ token: SimApiOidcService }], target: i0.ɵɵFactoryTarget.Component });\nSignInRedirectComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.4\", type: SignInRedirectComponent, selector: \"simapi-sign-in\", ngImport: i0, template: '', isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SignInRedirectComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'simapi-sign-in',\n                    template: '',\n                }]\n        }], ctorParameters: function () { return [{ type: SimApiOidcService }]; } });\n\nclass SimApiModule {\n}\nSimApiModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SimApiModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nSimApiModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.4\", ngImport: i0, type: SimApiModule, declarations: [SignInComponent,\n        SignOutComponent,\n        SignInRedirectComponent], imports: [HttpClientModule, i1.RouterModule] });\nSimApiModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SimApiModule, providers: [\n        SimApiService,\n        SimApiOidcService,\n        SimApiAuthService,\n        SimApiConfigService,\n    ], imports: [HttpClientModule,\n        RouterModule.forChild([\n            { path: 'oidc/sign-in', component: SignInComponent },\n            { path: 'oidc/sign-out', component: SignOutComponent },\n            { path: 'oidc/redirect', component: SignInRedirectComponent }\n        ])] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SimApiModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        SignInComponent,\n                        SignOutComponent,\n                        SignInRedirectComponent\n                    ],\n                    imports: [\n                        HttpClientModule,\n                        RouterModule.forChild([\n                            { path: 'oidc/sign-in', component: SignInComponent },\n                            { path: 'oidc/sign-out', component: SignOutComponent },\n                            { path: 'oidc/redirect', component: SignInRedirectComponent }\n                        ])\n                    ],\n                    providers: [\n                        SimApiService,\n                        SimApiOidcService,\n                        SimApiAuthService,\n                        SimApiConfigService,\n                    ],\n                    exports: []\n                }]\n        }] });\n\n/*\n * Public API Surface of simapi\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SimApiAuthService, SimApiConfigService, SimApiModule, SimApiOidcService, SimApiService };\n//# sourceMappingURL=simcu-simapi-ng.mjs.map\n","map":{"version":3,"file":"simcu-simapi-ng.mjs","sources":["../../../projects/simapi/src/lib/simapi-config.service.ts","../../../projects/simapi/src/lib/simapi-oidc.service.ts","../../../projects/simapi/src/lib/simapi.service.ts","../../../projects/simapi/src/lib/simapi-auth.service.ts","../../../projects/simapi/src/lib/sign-in.component.ts","../../../projects/simapi/src/lib/sign-out.component.ts","../../../projects/simapi/src/lib/sign-in-redirect.component.ts","../../../projects/simapi/src/lib/simapi.module.ts","../../../projects/simapi/src/public-api.ts","../../../projects/simapi/src/simcu-simapi-ng.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {ReplaySubject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SimApiConfigService {\n  debug = true;\n  oidc = {\n    server: '',\n    client_id: '',\n    scope: '',\n    response_type: 'token id_token',\n    sign_in_uri: '/oidc/sign-in',\n    sign_out_uri: '/oidc/sign-out',\n    sign_out_sync: false,\n    use_popup: false,\n    popup_setting: 'location=no,toolbar=no,width=1000,height=600,left=100,top=100',\n    full: null // 全量配置，使用oidc-client的配置方式，这种方式忽略其他参数\n  };\n  auth = {\n    token_name: 'simapi-auth-token',\n    check_url: '/auth/check',\n    logout_url: '/auth/logout',\n    login_url: '/auth/login'\n  };\n  api: {\n    endpoints: { default: string },\n    defaultEndpoint: string,\n    businessCallback: { [key in number | string]: (data: any) => void }\n    responseCallback: { [key in number | string]: (data: any) => void }\n  } = {\n    endpoints: {\n      default: ''\n    },\n    defaultEndpoint: 'default',\n    businessCallback: {\n      401: (data: any): void => {\n        localStorage.removeItem('token');\n      },\n      common: (data: any): void => {\n      }\n    },\n    responseCallback: {\n      success(response: any): any {\n        return response;\n      },\n      error(response: any): void {\n      }\n    }\n  };\n\n  readonly realTime$ = new ReplaySubject<SimApiConfigService>(1);\n\n  constructor() {\n    this.realTime$.next(this);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {ReplaySubject} from 'rxjs';\nimport {User, UserManager} from 'oidc-client';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {HashLocationStrategy, LocationStrategy} from '@angular/common';\nimport {SimApiConfigService} from './simapi-config.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SimApiOidcService {\n  private usePopup: boolean;\n  private oidcSetting = {\n    authority: '',\n    client_id: '',\n    redirect_uri: '',\n    scope: '',\n    response_type: '',\n    automaticSilentRenew: false,\n    popupWindowFeatures: 'location=no,toolbar=no,width=800,height=600,left=100,top=100',\n    post_logout_redirect_uri: '',\n    popup_post_logout_redirect_uri: ''\n  };\n  public manager: UserManager;\n  private currentUser: User | null | undefined = null;\n\n  userLoaded$ = new ReplaySubject<boolean>(1);\n  signState$ = new ReplaySubject<boolean>(1);\n\n  constructor(private route: ActivatedRoute, private ls: LocationStrategy,\n              private config: SimApiConfigService, private router: Router) {\n    config.realTime$.subscribe(x => {\n      if (this.config.oidc.full !== null) {\n        this.oidcSetting = x.oidc.full;\n      } else {\n        this.oidcSetting.response_type = x.oidc.response_type;\n        if (ls instanceof HashLocationStrategy) {\n          this.oidcSetting.redirect_uri = `${document.location.origin}/#${x.oidc.sign_in_uri}?`;\n          this.oidcSetting.post_logout_redirect_uri = `${document.location.origin}/#${x.oidc.sign_out_uri}`;\n          this.oidcSetting.popup_post_logout_redirect_uri = `${document.location.origin}/#${x.oidc.sign_out_uri}`;\n        } else {\n          this.oidcSetting.redirect_uri = `${document.location.origin}${x.oidc.sign_in_uri}`;\n          this.oidcSetting.post_logout_redirect_uri = `${document.location.origin}${x.oidc.sign_out_uri}`;\n          this.oidcSetting.popup_post_logout_redirect_uri = `${document.location.origin}${x.oidc.sign_out_uri}`;\n        }\n\n        this.usePopup = x.oidc.use_popup;\n        this.oidcSetting.popupWindowFeatures = x.oidc.popup_setting;\n        this.oidcSetting.authority = x.oidc.server;\n        this.oidcSetting.client_id = x.oidc.client_id;\n        this.oidcSetting.scope = x.oidc.scope;\n      }\n      this.manager = new UserManager(this.oidcSetting);\n      this.manager.clearStaleState();\n      this.manager.getUser().then(user => {\n        if (user) {\n          this.currentUser = user;\n          this.userLoaded$.next(true);\n        } else {\n          this.currentUser = null;\n          this.userLoaded$.next(false);\n        }\n      }).catch(err => {\n        this.currentUser = null;\n        this.userLoaded$.next(false);\n      });\n      this.manager.events.addUserLoaded(user => {\n        this.currentUser = user;\n        this.userLoaded$.next(true);\n      });\n      this.manager.events.addUserUnloaded(() => {\n        this.currentUser = null;\n        this.userLoaded$.next(false);\n      });\n    });\n  }\n\n  signIn(): void {\n    if (this.usePopup) {\n      this.manager.signinPopup();\n    } else {\n      this.manager.signinRedirect();\n    }\n  }\n\n  signInCallback(): void {\n    const url = window.location.href.replace('/#/', '').replace('?', '#');\n    this.manager.signinCallback(url).then(() => {\n      this.signState$.next(true);\n    });\n  }\n\n  signOut(): void {\n    if (this.config.oidc.sign_out_sync) {\n      if (this.usePopup) {\n        this.manager.signoutPopup();\n      } else {\n        this.manager.signoutRedirect();\n      }\n    } else {\n      this.manager.removeUser().then(() => {\n        this.userLoaded$.next(false);\n        this.signState$.next(false);\n      });\n    }\n  }\n\n  signOutCallBack(): void {\n    this.manager.signinCallback().then(() => {\n      this.signState$.next(false);\n    });\n    this.signState$.next(false);\n  }\n\n  get userAvailable(): boolean {\n    return !!this.currentUser;\n  }\n\n  get user(): User | null | undefined {\n    return this.currentUser;\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {SimApiOidcService} from './simapi-oidc.service';\nimport {SimApiConfigService} from './simapi-config.service';\n\ntype Callback = {\n  [key in number | string]: (data: any) => void | any;\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SimApiService {\n  constructor(private http: HttpClient, private oidc: SimApiOidcService, private config: SimApiConfigService) {\n    config.realTime$.subscribe(x => {\n      this.endpoints = x.api.endpoints;\n      this.debugMode = x.debug;\n      this.businessCallback = x.api.businessCallback;\n      this.responseCallback = x.api.responseCallback;\n    });\n  }\n\n  // 判断是否DEBUG模式\n  get isDebug(): boolean {\n    return this.debugMode;\n  }\n\n  private endpoints: { [name: string]: string };\n  private debugMode: boolean;\n\n  // 业务错误代码预处理（处理完后依旧会传给后面）\n  private businessCallback: Callback;\n\n  // 网络请求处理\n  private responseCallback: Callback;\n\n  public headers: any = {};\n\n  // 输出DEBUG信息（非DEBUG模式无输出）\n  debug(title: string, data: any): void {\n    if (this.isDebug) {\n      window.console.log('[DEBUG]', title, data);\n    }\n  }\n\n  // 生成一个随机短字符串\n  genS4(): string {\n    // @ts-ignore\n    // tslint:disable-next-line:no-bitwise\n    return (((1 + Math.random()) * 0x10000 * Date.parse(new Date())) | 0).toString(16).substring(1);\n  }\n\n  getEndpoint(name: string = this.config.api.defaultEndpoint): string {\n    return this.endpoints[name];\n  }\n\n  // 发起数据请求\n  public query(uri: string, params = {}, endpointKey = this.config.api.defaultEndpoint, headers: any = null): Observable<any> {\n    if (headers === null) {\n      headers = this.headers;\n    }\n    const queryId = this.genS4();\n    if (!(params instanceof FormData)) {\n      headers['Content-Type'] = 'application/json';\n    }\n    if (localStorage.getItem(this.config.auth.token_name)) {\n      headers.Token = localStorage.getItem(this.config.auth.token_name);\n    }\n    if (this.oidc.userAvailable) {\n      headers.Authorization = `${this.oidc.user?.token_type} ${this.oidc.user?.access_token}`;\n    }\n    if (this.isDebug) {\n      headers['Query-Id'] = queryId;\n      console.log('[REQUEST*]', queryId, '->', uri, 'AUTH:',\n        localStorage.getItem(this.config.auth.token_name) || this.oidc.userAvailable, params);\n    }\n    const resp = this.http.post(\n      this.endpoints[endpointKey] + uri,\n      params,\n      {\n        headers: new HttpHeaders(headers)\n      });\n    return new Observable<any>(obs => {\n      resp.subscribe(data => {\n        if (this.isDebug) {\n          console.log('[RESPONSE]', queryId, '->', data);\n        }\n        const respData = this.responseCallback.success(data);\n        if (this.businessCallback.hasOwnProperty(respData.code)) {\n          this.businessCallback[respData.code](respData);\n        } else if (this.businessCallback.common && respData.code !== 200) {\n          this.businessCallback.common(respData);\n        }\n        if (respData.code === 200) {\n          obs.next(respData);\n        } else {\n          obs.error(respData);\n        }\n      }, err => {\n        if (this.isDebug) {\n          console.log('[RESPONSE]', queryId, '->', err);\n        }\n        this.responseCallback.error(err);\n      });\n    });\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, of} from 'rxjs';\nimport {SimApiService} from './simapi.service';\nimport {SimApiConfigService} from './simapi-config.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SimApiAuthService {\n  constructor(private simapi: SimApiService, private config: SimApiConfigService) {\n  }\n\n  // 登录\n  public login(request: {}): Observable<any> {\n    return new Observable<any>(obs => {\n      this.simapi.query(this.config.auth.login_url, request).subscribe(x => {\n        if (x.data) {\n          this.setToken(x.data);\n        }\n        obs.next(x);\n      }, e => obs.error(e));\n    });\n  }\n\n  // 设置登陆Token\n  public setToken(token: string): void {\n    localStorage.setItem(this.config.auth.token_name, token);\n  }\n\n  // 登出\n  public logout(url = this.config.auth.logout_url): Observable<any> {\n    return new Observable<any>(obs => {\n      localStorage.removeItem(this.config.auth.token_name);\n      if (url !== null) {\n        this.simapi.query(url).subscribe(r => obs.next(r), e => obs.error(e));\n      } else {\n        obs.next(true);\n      }\n    });\n  }\n\n  // 检测登陆状态（需要借助401返回判断）\n  public checkLogin(url = this.config.auth.check_url): void {\n    if (url !== null) {\n      this.simapi.query(url).subscribe();\n    } else {\n      if (this.getToken() !== '') {\n        this.config.api.businessCallback[401](null);\n      }\n    }\n  }\n\n  // 获取用户登陆标识\n  public getToken(): string {\n    return localStorage.getItem(this.config.auth.token_name) || '';\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {SimApiOidcService} from './simapi-oidc.service';\n\n@Component({\n  selector: 'simapi-sign-in',\n  template: '',\n})\nexport class SignInComponent implements OnInit {\n\n  constructor(private oidc: SimApiOidcService) {\n  }\n\n  ngOnInit(): void {\n    this.oidc.signInCallback();\n  }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {SimApiOidcService} from './simapi-oidc.service';\n\n@Component({\n  selector: 'simapi-sign-out',\n  template: '',\n})\nexport class SignOutComponent implements OnInit {\n\n  constructor(private oidc: SimApiOidcService) {\n  }\n\n  ngOnInit(): void {\n    this.oidc.signOutCallBack();\n  }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {SimApiOidcService} from './simapi-oidc.service';\n\n@Component({\n  selector: 'simapi-sign-in',\n  template: '',\n})\nexport class SignInRedirectComponent implements OnInit {\n\n  constructor(private oidc: SimApiOidcService) {\n  }\n\n  ngOnInit(): void {\n    this.oidc.signIn();\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\nimport {SimApiService} from './simapi.service';\nimport {SimApiOidcService} from './simapi-oidc.service';\nimport {SimApiAuthService} from './simapi-auth.service';\nimport {SimApiConfigService} from './simapi-config.service';\nimport {SignInComponent} from './sign-in.component';\nimport {RouterModule} from '@angular/router';\nimport {SignOutComponent} from './sign-out.component';\nimport {SignInRedirectComponent} from './sign-in-redirect.component';\n\n@NgModule({\n  declarations: [\n    SignInComponent,\n    SignOutComponent,\n    SignInRedirectComponent\n  ],\n  imports: [\n    HttpClientModule,\n    RouterModule.forChild([\n      {path: 'oidc/sign-in', component: SignInComponent},\n      {path: 'oidc/sign-out', component: SignOutComponent},\n      {path: 'oidc/redirect', component: SignInRedirectComponent}\n    ])\n  ],\n  providers: [\n    SimApiService,\n    SimApiOidcService,\n    SimApiAuthService,\n    SimApiConfigService,\n  ],\n  exports: []\n})\nexport class SimApiModule {\n}\n","/*\n * Public API Surface of simapi\n */\nexport * from './lib/simapi.service';\nexport * from './lib/simapi-auth.service';\nexport * from './lib/simapi-oidc.service';\nexport * from './lib/simapi.module';\nexport * from './lib/simapi-config.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i3.SimApiConfigService","i1","i2.SimApiOidcService","i1.SimApiService","i2.SimApiConfigService","i1.SimApiOidcService"],"mappings":"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"}},"fesm2015":{"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, NgModule } from '@angular/core';\nimport * as i1$1 from '@angular/common/http';\nimport { HttpHeaders, HttpClientModule } from '@angular/common/http';\nimport { ReplaySubject, Observable } from 'rxjs';\nimport { UserManager } from 'oidc-client';\nimport * as i2 from '@angular/common';\nimport { HashLocationStrategy } from '@angular/common';\nimport * as i1 from '@angular/router';\nimport { RouterModule } from '@angular/router';\n\nclass SimApiConfigService {\n    constructor() {\n        this.debug = true;\n        this.oidc = {\n            server: '',\n            client_id: '',\n            scope: '',\n            response_type: 'token id_token',\n            sign_in_uri: '/oidc/sign-in',\n            sign_out_uri: '/oidc/sign-out',\n            sign_out_sync: false,\n            use_popup: false,\n            popup_setting: 'location=no,toolbar=no,width=1000,height=600,left=100,top=100',\n            full: null // 全量配置，使用oidc-client的配置方式，这种方式忽略其他参数\n        };\n        this.auth = {\n            token_name: 'simapi-auth-token',\n            check_url: '/auth/check',\n            logout_url: '/auth/logout',\n            login_url: '/auth/login'\n        };\n        this.api = {\n            endpoints: {\n                default: ''\n            },\n            defaultEndpoint: 'default',\n            businessCallback: {\n                401: (data) => {\n                    localStorage.removeItem('token');\n                },\n                common: (data) => {\n                }\n            },\n            responseCallback: {\n                success(response) {\n                    return response;\n                },\n                error(response) {\n                }\n            }\n        };\n        this.realTime$ = new ReplaySubject(1);\n        this.realTime$.next(this);\n    }\n}\nSimApiConfigService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SimApiConfigService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nSimApiConfigService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SimApiConfigService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SimApiConfigService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass SimApiOidcService {\n    constructor(route, ls, config, router) {\n        this.route = route;\n        this.ls = ls;\n        this.config = config;\n        this.router = router;\n        this.oidcSetting = {\n            authority: '',\n            client_id: '',\n            redirect_uri: '',\n            scope: '',\n            response_type: '',\n            automaticSilentRenew: false,\n            popupWindowFeatures: 'location=no,toolbar=no,width=800,height=600,left=100,top=100',\n            post_logout_redirect_uri: '',\n            popup_post_logout_redirect_uri: ''\n        };\n        this.currentUser = null;\n        this.userLoaded$ = new ReplaySubject(1);\n        this.signState$ = new ReplaySubject(1);\n        config.realTime$.subscribe(x => {\n            if (this.config.oidc.full !== null) {\n                this.oidcSetting = x.oidc.full;\n            }\n            else {\n                this.oidcSetting.response_type = x.oidc.response_type;\n                if (ls instanceof HashLocationStrategy) {\n                    this.oidcSetting.redirect_uri = `${document.location.origin}/#${x.oidc.sign_in_uri}?`;\n                    this.oidcSetting.post_logout_redirect_uri = `${document.location.origin}/#${x.oidc.sign_out_uri}`;\n                    this.oidcSetting.popup_post_logout_redirect_uri = `${document.location.origin}/#${x.oidc.sign_out_uri}`;\n                }\n                else {\n                    this.oidcSetting.redirect_uri = `${document.location.origin}${x.oidc.sign_in_uri}`;\n                    this.oidcSetting.post_logout_redirect_uri = `${document.location.origin}${x.oidc.sign_out_uri}`;\n                    this.oidcSetting.popup_post_logout_redirect_uri = `${document.location.origin}${x.oidc.sign_out_uri}`;\n                }\n                this.usePopup = x.oidc.use_popup;\n                this.oidcSetting.popupWindowFeatures = x.oidc.popup_setting;\n                this.oidcSetting.authority = x.oidc.server;\n                this.oidcSetting.client_id = x.oidc.client_id;\n                this.oidcSetting.scope = x.oidc.scope;\n            }\n            this.manager = new UserManager(this.oidcSetting);\n            this.manager.clearStaleState();\n            this.manager.getUser().then(user => {\n                if (user) {\n                    this.currentUser = user;\n                    this.userLoaded$.next(true);\n                }\n                else {\n                    this.currentUser = null;\n                    this.userLoaded$.next(false);\n                }\n            }).catch(err => {\n                this.currentUser = null;\n                this.userLoaded$.next(false);\n            });\n            this.manager.events.addUserLoaded(user => {\n                this.currentUser = user;\n                this.userLoaded$.next(true);\n            });\n            this.manager.events.addUserUnloaded(() => {\n                this.currentUser = null;\n                this.userLoaded$.next(false);\n            });\n        });\n    }\n    signIn() {\n        if (this.usePopup) {\n            this.manager.signinPopup();\n        }\n        else {\n            this.manager.signinRedirect();\n        }\n    }\n    signInCallback() {\n        const url = window.location.href.replace('/#/', '').replace('?', '#');\n        this.manager.signinCallback(url).then(() => {\n            this.signState$.next(true);\n        });\n    }\n    signOut() {\n        if (this.config.oidc.sign_out_sync) {\n            if (this.usePopup) {\n                this.manager.signoutPopup();\n            }\n            else {\n                this.manager.signoutRedirect();\n            }\n        }\n        else {\n            this.manager.removeUser().then(() => {\n                this.userLoaded$.next(false);\n                this.signState$.next(false);\n            });\n        }\n    }\n    signOutCallBack() {\n        this.manager.signinCallback().then(() => {\n            this.signState$.next(false);\n        });\n        this.signState$.next(false);\n    }\n    get userAvailable() {\n        return !!this.currentUser;\n    }\n    get user() {\n        return this.currentUser;\n    }\n}\nSimApiOidcService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SimApiOidcService, deps: [{ token: i1.ActivatedRoute }, { token: i2.LocationStrategy }, { token: SimApiConfigService }, { token: i1.Router }], target: i0.ɵɵFactoryTarget.Injectable });\nSimApiOidcService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SimApiOidcService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SimApiOidcService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.ActivatedRoute }, { type: i2.LocationStrategy }, { type: SimApiConfigService }, { type: i1.Router }]; } });\n\nclass SimApiService {\n    constructor(http, oidc, config) {\n        this.http = http;\n        this.oidc = oidc;\n        this.config = config;\n        this.headers = {};\n        config.realTime$.subscribe(x => {\n            this.endpoints = x.api.endpoints;\n            this.debugMode = x.debug;\n            this.businessCallback = x.api.businessCallback;\n            this.responseCallback = x.api.responseCallback;\n        });\n    }\n    // 判断是否DEBUG模式\n    get isDebug() {\n        return this.debugMode;\n    }\n    // 输出DEBUG信息（非DEBUG模式无输出）\n    debug(title, data) {\n        if (this.isDebug) {\n            window.console.log('[DEBUG]', title, data);\n        }\n    }\n    // 生成一个随机短字符串\n    genS4() {\n        // @ts-ignore\n        // tslint:disable-next-line:no-bitwise\n        return (((1 + Math.random()) * 0x10000 * Date.parse(new Date())) | 0).toString(16).substring(1);\n    }\n    getEndpoint(name = this.config.api.defaultEndpoint) {\n        return this.endpoints[name];\n    }\n    // 发起数据请求\n    query(uri, params = {}, endpointKey = this.config.api.defaultEndpoint, headers = null) {\n        var _a, _b;\n        if (headers === null) {\n            headers = this.headers;\n        }\n        const queryId = this.genS4();\n        if (!(params instanceof FormData)) {\n            headers['Content-Type'] = 'application/json';\n        }\n        if (localStorage.getItem(this.config.auth.token_name)) {\n            headers.Token = localStorage.getItem(this.config.auth.token_name);\n        }\n        if (this.oidc.userAvailable) {\n            headers.Authorization = `${(_a = this.oidc.user) === null || _a === void 0 ? void 0 : _a.token_type} ${(_b = this.oidc.user) === null || _b === void 0 ? void 0 : _b.access_token}`;\n        }\n        if (this.isDebug) {\n            headers['Query-Id'] = queryId;\n            console.log('[REQUEST*]', queryId, '->', uri, 'AUTH:', localStorage.getItem(this.config.auth.token_name) || this.oidc.userAvailable, params);\n        }\n        const resp = this.http.post(this.endpoints[endpointKey] + uri, params, {\n            headers: new HttpHeaders(headers)\n        });\n        return new Observable(obs => {\n            resp.subscribe(data => {\n                if (this.isDebug) {\n                    console.log('[RESPONSE]', queryId, '->', data);\n                }\n                const respData = this.responseCallback.success(data);\n                if (this.businessCallback.hasOwnProperty(respData.code)) {\n                    this.businessCallback[respData.code](respData);\n                }\n                else if (this.businessCallback.common && respData.code !== 200) {\n                    this.businessCallback.common(respData);\n                }\n                if (respData.code === 200) {\n                    obs.next(respData);\n                }\n                else {\n                    obs.error(respData);\n                }\n            }, err => {\n                if (this.isDebug) {\n                    console.log('[RESPONSE]', queryId, '->', err);\n                }\n                this.responseCallback.error(err);\n            });\n        });\n    }\n}\nSimApiService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SimApiService, deps: [{ token: i1$1.HttpClient }, { token: SimApiOidcService }, { token: SimApiConfigService }], target: i0.ɵɵFactoryTarget.Injectable });\nSimApiService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SimApiService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SimApiService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1$1.HttpClient }, { type: SimApiOidcService }, { type: SimApiConfigService }]; } });\n\nclass SimApiAuthService {\n    constructor(simapi, config) {\n        this.simapi = simapi;\n        this.config = config;\n    }\n    // 登录\n    login(request) {\n        return new Observable(obs => {\n            this.simapi.query(this.config.auth.login_url, request).subscribe(x => {\n                if (x.data) {\n                    this.setToken(x.data);\n                }\n                obs.next(x);\n            }, e => obs.error(e));\n        });\n    }\n    // 设置登陆Token\n    setToken(token) {\n        localStorage.setItem(this.config.auth.token_name, token);\n    }\n    // 登出\n    logout(url = this.config.auth.logout_url) {\n        return new Observable(obs => {\n            localStorage.removeItem(this.config.auth.token_name);\n            if (url !== null) {\n                this.simapi.query(url).subscribe(r => obs.next(r), e => obs.error(e));\n            }\n            else {\n                obs.next(true);\n            }\n        });\n    }\n    // 检测登陆状态（需要借助401返回判断）\n    checkLogin(url = this.config.auth.check_url) {\n        if (url !== null) {\n            this.simapi.query(url).subscribe();\n        }\n        else {\n            if (this.getToken() !== '') {\n                this.config.api.businessCallback[401](null);\n            }\n        }\n    }\n    // 获取用户登陆标识\n    getToken() {\n        return localStorage.getItem(this.config.auth.token_name) || '';\n    }\n}\nSimApiAuthService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SimApiAuthService, deps: [{ token: SimApiService }, { token: SimApiConfigService }], target: i0.ɵɵFactoryTarget.Injectable });\nSimApiAuthService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SimApiAuthService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SimApiAuthService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: SimApiService }, { type: SimApiConfigService }]; } });\n\nclass SignInComponent {\n    constructor(oidc) {\n        this.oidc = oidc;\n    }\n    ngOnInit() {\n        this.oidc.signInCallback();\n    }\n}\nSignInComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SignInComponent, deps: [{ token: SimApiOidcService }], target: i0.ɵɵFactoryTarget.Component });\nSignInComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.4\", type: SignInComponent, selector: \"simapi-sign-in\", ngImport: i0, template: '', isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SignInComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'simapi-sign-in',\n                    template: '',\n                }]\n        }], ctorParameters: function () { return [{ type: SimApiOidcService }]; } });\n\nclass SignOutComponent {\n    constructor(oidc) {\n        this.oidc = oidc;\n    }\n    ngOnInit() {\n        this.oidc.signOutCallBack();\n    }\n}\nSignOutComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SignOutComponent, deps: [{ token: SimApiOidcService }], target: i0.ɵɵFactoryTarget.Component });\nSignOutComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.4\", type: SignOutComponent, selector: \"simapi-sign-out\", ngImport: i0, template: '', isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SignOutComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'simapi-sign-out',\n                    template: '',\n                }]\n        }], ctorParameters: function () { return [{ type: SimApiOidcService }]; } });\n\nclass SignInRedirectComponent {\n    constructor(oidc) {\n        this.oidc = oidc;\n    }\n    ngOnInit() {\n        this.oidc.signIn();\n    }\n}\nSignInRedirectComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SignInRedirectComponent, deps: [{ token: SimApiOidcService }], target: i0.ɵɵFactoryTarget.Component });\nSignInRedirectComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.4\", type: SignInRedirectComponent, selector: \"simapi-sign-in\", ngImport: i0, template: '', isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SignInRedirectComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'simapi-sign-in',\n                    template: '',\n                }]\n        }], ctorParameters: function () { return [{ type: SimApiOidcService }]; } });\n\nclass SimApiModule {\n}\nSimApiModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SimApiModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nSimApiModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.4\", ngImport: i0, type: SimApiModule, declarations: [SignInComponent,\n        SignOutComponent,\n        SignInRedirectComponent], imports: [HttpClientModule, i1.RouterModule] });\nSimApiModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SimApiModule, providers: [\n        SimApiService,\n        SimApiOidcService,\n        SimApiAuthService,\n        SimApiConfigService,\n    ], imports: [HttpClientModule,\n        RouterModule.forChild([\n            { path: 'oidc/sign-in', component: SignInComponent },\n            { path: 'oidc/sign-out', component: SignOutComponent },\n            { path: 'oidc/redirect', component: SignInRedirectComponent }\n        ])] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.4\", ngImport: i0, type: SimApiModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        SignInComponent,\n                        SignOutComponent,\n                        SignInRedirectComponent\n                    ],\n                    imports: [\n                        HttpClientModule,\n                        RouterModule.forChild([\n                            { path: 'oidc/sign-in', component: SignInComponent },\n                            { path: 'oidc/sign-out', component: SignOutComponent },\n                            { path: 'oidc/redirect', component: SignInRedirectComponent }\n                        ])\n                    ],\n                    providers: [\n                        SimApiService,\n                        SimApiOidcService,\n                        SimApiAuthService,\n                        SimApiConfigService,\n                    ],\n                    exports: []\n                }]\n        }] });\n\n/*\n * Public API Surface of simapi\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SimApiAuthService, SimApiConfigService, SimApiModule, SimApiOidcService, SimApiService };\n//# sourceMappingURL=simcu-simapi-ng.mjs.map\n","map":{"version":3,"file":"simcu-simapi-ng.mjs","sources":["../../../projects/simapi/src/lib/simapi-config.service.ts","../../../projects/simapi/src/lib/simapi-oidc.service.ts","../../../projects/simapi/src/lib/simapi.service.ts","../../../projects/simapi/src/lib/simapi-auth.service.ts","../../../projects/simapi/src/lib/sign-in.component.ts","../../../projects/simapi/src/lib/sign-out.component.ts","../../../projects/simapi/src/lib/sign-in-redirect.component.ts","../../../projects/simapi/src/lib/simapi.module.ts","../../../projects/simapi/src/public-api.ts","../../../projects/simapi/src/simcu-simapi-ng.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {ReplaySubject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SimApiConfigService {\n  debug = true;\n  oidc = {\n    server: '',\n    client_id: '',\n    scope: '',\n    response_type: 'token id_token',\n    sign_in_uri: '/oidc/sign-in',\n    sign_out_uri: '/oidc/sign-out',\n    sign_out_sync: false,\n    use_popup: false,\n    popup_setting: 'location=no,toolbar=no,width=1000,height=600,left=100,top=100',\n    full: null // 全量配置，使用oidc-client的配置方式，这种方式忽略其他参数\n  };\n  auth = {\n    token_name: 'simapi-auth-token',\n    check_url: '/auth/check',\n    logout_url: '/auth/logout',\n    login_url: '/auth/login'\n  };\n  api: {\n    endpoints: { default: string },\n    defaultEndpoint: string,\n    businessCallback: { [key in number | string]: (data: any) => void }\n    responseCallback: { [key in number | string]: (data: any) => void }\n  } = {\n    endpoints: {\n      default: ''\n    },\n    defaultEndpoint: 'default',\n    businessCallback: {\n      401: (data: any): void => {\n        localStorage.removeItem('token');\n      },\n      common: (data: any): void => {\n      }\n    },\n    responseCallback: {\n      success(response: any): any {\n        return response;\n      },\n      error(response: any): void {\n      }\n    }\n  };\n\n  readonly realTime$ = new ReplaySubject<SimApiConfigService>(1);\n\n  constructor() {\n    this.realTime$.next(this);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {ReplaySubject} from 'rxjs';\nimport {User, UserManager} from 'oidc-client';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {HashLocationStrategy, LocationStrategy} from '@angular/common';\nimport {SimApiConfigService} from './simapi-config.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SimApiOidcService {\n  private usePopup: boolean;\n  private oidcSetting = {\n    authority: '',\n    client_id: '',\n    redirect_uri: '',\n    scope: '',\n    response_type: '',\n    automaticSilentRenew: false,\n    popupWindowFeatures: 'location=no,toolbar=no,width=800,height=600,left=100,top=100',\n    post_logout_redirect_uri: '',\n    popup_post_logout_redirect_uri: ''\n  };\n  public manager: UserManager;\n  private currentUser: User | null | undefined = null;\n\n  userLoaded$ = new ReplaySubject<boolean>(1);\n  signState$ = new ReplaySubject<boolean>(1);\n\n  constructor(private route: ActivatedRoute, private ls: LocationStrategy,\n              private config: SimApiConfigService, private router: Router) {\n    config.realTime$.subscribe(x => {\n      if (this.config.oidc.full !== null) {\n        this.oidcSetting = x.oidc.full;\n      } else {\n        this.oidcSetting.response_type = x.oidc.response_type;\n        if (ls instanceof HashLocationStrategy) {\n          this.oidcSetting.redirect_uri = `${document.location.origin}/#${x.oidc.sign_in_uri}?`;\n          this.oidcSetting.post_logout_redirect_uri = `${document.location.origin}/#${x.oidc.sign_out_uri}`;\n          this.oidcSetting.popup_post_logout_redirect_uri = `${document.location.origin}/#${x.oidc.sign_out_uri}`;\n        } else {\n          this.oidcSetting.redirect_uri = `${document.location.origin}${x.oidc.sign_in_uri}`;\n          this.oidcSetting.post_logout_redirect_uri = `${document.location.origin}${x.oidc.sign_out_uri}`;\n          this.oidcSetting.popup_post_logout_redirect_uri = `${document.location.origin}${x.oidc.sign_out_uri}`;\n        }\n\n        this.usePopup = x.oidc.use_popup;\n        this.oidcSetting.popupWindowFeatures = x.oidc.popup_setting;\n        this.oidcSetting.authority = x.oidc.server;\n        this.oidcSetting.client_id = x.oidc.client_id;\n        this.oidcSetting.scope = x.oidc.scope;\n      }\n      this.manager = new UserManager(this.oidcSetting);\n      this.manager.clearStaleState();\n      this.manager.getUser().then(user => {\n        if (user) {\n          this.currentUser = user;\n          this.userLoaded$.next(true);\n        } else {\n          this.currentUser = null;\n          this.userLoaded$.next(false);\n        }\n      }).catch(err => {\n        this.currentUser = null;\n        this.userLoaded$.next(false);\n      });\n      this.manager.events.addUserLoaded(user => {\n        this.currentUser = user;\n        this.userLoaded$.next(true);\n      });\n      this.manager.events.addUserUnloaded(() => {\n        this.currentUser = null;\n        this.userLoaded$.next(false);\n      });\n    });\n  }\n\n  signIn(): void {\n    if (this.usePopup) {\n      this.manager.signinPopup();\n    } else {\n      this.manager.signinRedirect();\n    }\n  }\n\n  signInCallback(): void {\n    const url = window.location.href.replace('/#/', '').replace('?', '#');\n    this.manager.signinCallback(url).then(() => {\n      this.signState$.next(true);\n    });\n  }\n\n  signOut(): void {\n    if (this.config.oidc.sign_out_sync) {\n      if (this.usePopup) {\n        this.manager.signoutPopup();\n      } else {\n        this.manager.signoutRedirect();\n      }\n    } else {\n      this.manager.removeUser().then(() => {\n        this.userLoaded$.next(false);\n        this.signState$.next(false);\n      });\n    }\n  }\n\n  signOutCallBack(): void {\n    this.manager.signinCallback().then(() => {\n      this.signState$.next(false);\n    });\n    this.signState$.next(false);\n  }\n\n  get userAvailable(): boolean {\n    return !!this.currentUser;\n  }\n\n  get user(): User | null | undefined {\n    return this.currentUser;\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {SimApiOidcService} from './simapi-oidc.service';\nimport {SimApiConfigService} from './simapi-config.service';\n\ntype Callback = {\n  [key in number | string]: (data: any) => void | any;\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SimApiService {\n  constructor(private http: HttpClient, private oidc: SimApiOidcService, private config: SimApiConfigService) {\n    config.realTime$.subscribe(x => {\n      this.endpoints = x.api.endpoints;\n      this.debugMode = x.debug;\n      this.businessCallback = x.api.businessCallback;\n      this.responseCallback = x.api.responseCallback;\n    });\n  }\n\n  // 判断是否DEBUG模式\n  get isDebug(): boolean {\n    return this.debugMode;\n  }\n\n  private endpoints: { [name: string]: string };\n  private debugMode: boolean;\n\n  // 业务错误代码预处理（处理完后依旧会传给后面）\n  private businessCallback: Callback;\n\n  // 网络请求处理\n  private responseCallback: Callback;\n\n  public headers: any = {};\n\n  // 输出DEBUG信息（非DEBUG模式无输出）\n  debug(title: string, data: any): void {\n    if (this.isDebug) {\n      window.console.log('[DEBUG]', title, data);\n    }\n  }\n\n  // 生成一个随机短字符串\n  genS4(): string {\n    // @ts-ignore\n    // tslint:disable-next-line:no-bitwise\n    return (((1 + Math.random()) * 0x10000 * Date.parse(new Date())) | 0).toString(16).substring(1);\n  }\n\n  getEndpoint(name: string = this.config.api.defaultEndpoint): string {\n    return this.endpoints[name];\n  }\n\n  // 发起数据请求\n  public query(uri: string, params = {}, endpointKey = this.config.api.defaultEndpoint, headers: any = null): Observable<any> {\n    if (headers === null) {\n      headers = this.headers;\n    }\n    const queryId = this.genS4();\n    if (!(params instanceof FormData)) {\n      headers['Content-Type'] = 'application/json';\n    }\n    if (localStorage.getItem(this.config.auth.token_name)) {\n      headers.Token = localStorage.getItem(this.config.auth.token_name);\n    }\n    if (this.oidc.userAvailable) {\n      headers.Authorization = `${this.oidc.user?.token_type} ${this.oidc.user?.access_token}`;\n    }\n    if (this.isDebug) {\n      headers['Query-Id'] = queryId;\n      console.log('[REQUEST*]', queryId, '->', uri, 'AUTH:',\n        localStorage.getItem(this.config.auth.token_name) || this.oidc.userAvailable, params);\n    }\n    const resp = this.http.post(\n      this.endpoints[endpointKey] + uri,\n      params,\n      {\n        headers: new HttpHeaders(headers)\n      });\n    return new Observable<any>(obs => {\n      resp.subscribe(data => {\n        if (this.isDebug) {\n          console.log('[RESPONSE]', queryId, '->', data);\n        }\n        const respData = this.responseCallback.success(data);\n        if (this.businessCallback.hasOwnProperty(respData.code)) {\n          this.businessCallback[respData.code](respData);\n        } else if (this.businessCallback.common && respData.code !== 200) {\n          this.businessCallback.common(respData);\n        }\n        if (respData.code === 200) {\n          obs.next(respData);\n        } else {\n          obs.error(respData);\n        }\n      }, err => {\n        if (this.isDebug) {\n          console.log('[RESPONSE]', queryId, '->', err);\n        }\n        this.responseCallback.error(err);\n      });\n    });\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, of} from 'rxjs';\nimport {SimApiService} from './simapi.service';\nimport {SimApiConfigService} from './simapi-config.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SimApiAuthService {\n  constructor(private simapi: SimApiService, private config: SimApiConfigService) {\n  }\n\n  // 登录\n  public login(request: {}): Observable<any> {\n    return new Observable<any>(obs => {\n      this.simapi.query(this.config.auth.login_url, request).subscribe(x => {\n        if (x.data) {\n          this.setToken(x.data);\n        }\n        obs.next(x);\n      }, e => obs.error(e));\n    });\n  }\n\n  // 设置登陆Token\n  public setToken(token: string): void {\n    localStorage.setItem(this.config.auth.token_name, token);\n  }\n\n  // 登出\n  public logout(url = this.config.auth.logout_url): Observable<any> {\n    return new Observable<any>(obs => {\n      localStorage.removeItem(this.config.auth.token_name);\n      if (url !== null) {\n        this.simapi.query(url).subscribe(r => obs.next(r), e => obs.error(e));\n      } else {\n        obs.next(true);\n      }\n    });\n  }\n\n  // 检测登陆状态（需要借助401返回判断）\n  public checkLogin(url = this.config.auth.check_url): void {\n    if (url !== null) {\n      this.simapi.query(url).subscribe();\n    } else {\n      if (this.getToken() !== '') {\n        this.config.api.businessCallback[401](null);\n      }\n    }\n  }\n\n  // 获取用户登陆标识\n  public getToken(): string {\n    return localStorage.getItem(this.config.auth.token_name) || '';\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {SimApiOidcService} from './simapi-oidc.service';\n\n@Component({\n  selector: 'simapi-sign-in',\n  template: '',\n})\nexport class SignInComponent implements OnInit {\n\n  constructor(private oidc: SimApiOidcService) {\n  }\n\n  ngOnInit(): void {\n    this.oidc.signInCallback();\n  }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {SimApiOidcService} from './simapi-oidc.service';\n\n@Component({\n  selector: 'simapi-sign-out',\n  template: '',\n})\nexport class SignOutComponent implements OnInit {\n\n  constructor(private oidc: SimApiOidcService) {\n  }\n\n  ngOnInit(): void {\n    this.oidc.signOutCallBack();\n  }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {SimApiOidcService} from './simapi-oidc.service';\n\n@Component({\n  selector: 'simapi-sign-in',\n  template: '',\n})\nexport class SignInRedirectComponent implements OnInit {\n\n  constructor(private oidc: SimApiOidcService) {\n  }\n\n  ngOnInit(): void {\n    this.oidc.signIn();\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\nimport {SimApiService} from './simapi.service';\nimport {SimApiOidcService} from './simapi-oidc.service';\nimport {SimApiAuthService} from './simapi-auth.service';\nimport {SimApiConfigService} from './simapi-config.service';\nimport {SignInComponent} from './sign-in.component';\nimport {RouterModule} from '@angular/router';\nimport {SignOutComponent} from './sign-out.component';\nimport {SignInRedirectComponent} from './sign-in-redirect.component';\n\n@NgModule({\n  declarations: [\n    SignInComponent,\n    SignOutComponent,\n    SignInRedirectComponent\n  ],\n  imports: [\n    HttpClientModule,\n    RouterModule.forChild([\n      {path: 'oidc/sign-in', component: SignInComponent},\n      {path: 'oidc/sign-out', component: SignOutComponent},\n      {path: 'oidc/redirect', component: SignInRedirectComponent}\n    ])\n  ],\n  providers: [\n    SimApiService,\n    SimApiOidcService,\n    SimApiAuthService,\n    SimApiConfigService,\n  ],\n  exports: []\n})\nexport class SimApiModule {\n}\n","/*\n * Public API Surface of simapi\n */\nexport * from './lib/simapi.service';\nexport * from './lib/simapi-auth.service';\nexport * from './lib/simapi-oidc.service';\nexport * from './lib/simapi.module';\nexport * from './lib/simapi-config.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i3.SimApiConfigService","i1","i2.SimApiOidcService","i1.SimApiService","i2.SimApiConfigService","i1.SimApiOidcService"],"mappings":"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"}}}